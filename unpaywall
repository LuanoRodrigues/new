openapi: 3.0.0
info:
  title: Unpaywall API
  description: Free, programmatic access to the Unpaywall database
  version: 2.0.0
servers:
  - url: https://api.unpaywall.org/v2
paths:
  /{doi}:
    get:
      summary: Get OA status and bibliographic info for a given DOI
      description: Retrieves OA status and bibliographic information for a specified DOI-assigned resource.
      operationId: getDOIInfo # Fixed missing operationId
      parameters:
        - name: doi
          in: path
          description: DOI of the resource
          required: true
          schema:
            type: string
          example: "10.1038/nature12373"
        - name: email
          in: query
          description: Your email for authentication
          required: true
          schema:
            type: string
          example: "your_email@example.com"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DOIObject"
  /search:
    get:
      summary: Search for articles
      description: |
        Provides the full GET /v2/:doi responses for articles whose titles match your query.
        50 results are returned per request and the page argument requests pages after the first.
      operationId: searchArticles # Fixed missing operationId
      parameters:
        - name: query
          in: query
          description: The text to search for. Search terms are separated by whitespace.
          required: true
          schema:
            type: string
          example: "cell thermometry"
        - name: is_oa
          in: query
          description: A boolean value indicating whether to filter results to OA articles.
          required: false
          schema:
            type: boolean
          example: true
        - name: page
          in: query
          description: An integer indicating which page of results should be returned.
          required: false
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SearchResult"
components:
  schemas:
    DOIObject:
      type: object
      properties:
        # ... other properties ...
        oa_locations_embargoed:
          type: array
          items:
            $ref: "#/components/schemas/OALocation" # Fixed missing items schema
          nullable: true
          description: List of OA Location objects associated with this resource that are not yet available.
        # ... other properties ...
        z_authors:
          type: array
          items:
            type: object # Assuming no detailed schema; replace with specific schema if available
          nullable: true
          description: List of Crossref Contributor objects, or null.
        # ... other properties ...
