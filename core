openapi: 3.0.3
info:
  title: IOTA CORE REST API
  description: This document specifies the REST API for IOTA CORE node software.
  contact:
    email: contact@iota.org
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 3.0.0
externalDocs:
  description: Find out more about IOTA
  url: 'https://iota.org'
servers:
  - url: 'https://api.core.ac.uk/v3'  # Removed trailing slash

paths:
  /search/{entityType}:
    get:
      tags:
        - Search
      summary: Search through all CORE entities
      description: >
        Search into all CORE entities. See our query language section to understand how to query the CORE data.
      operationId: searchCoreEntities
      parameters:
        - name: entityType
          in: path
          required: true
          schema:
            type: string
            enum: [works, outputs, data-providers, journals]
          description: Type of the entity to search.
        - name: q
          in: query
          required: true
          schema:
            type: string
          description: Free text search query.
        - name: includeAbstracts
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: Flag to include abstracts in the search results.
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
          description: The maximum number of search results to return.
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
          description: The offset from the beginning of the result set.
      responses:
        '200':
          description: Contains the entities matching the search query.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResults'  # Referenced SearchResults schema
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'  # Added ErrorResponse schema reference

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: API key needed to authorize requests.
  schemas:
    SearchResults:
      type: object
      properties:
        total_hits:
          type: integer
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
    SearchResult:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        abstract:
          type: string
        authors:
          type: array
          items:
            type: string
        date:
          type: string
          format: date
        downloadUrl:
          type: string
          format: uri
    ErrorResponse:
      type: object
      properties:
        response_data:
          type: object
          properties:
            message:
              type: string
        status_code:
          type: integer
        action_id:
          type: string
